apiVersion: openchoreo.dev/v1alpha1
kind: ComponentTypeDefinition
metadata:
  name: web-service
  namespace: default
spec:
  workloadType: deployment

  schema:
    types:
      Resources:
        cpu: "string | default=100m"
        memory: "string | default=256Mi"

    parameters:
      replicas: "integer | default=1"
      imagePullPolicy: "string | default=IfNotPresent"
      port: "integer | default=8080"

    envOverrides:
      resources:
        requests: Resources
        limits: Resources

  resources:
    - id: deployment
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: ${metadata.name}
          namespace: ${metadata.namespace}
          labels: ${metadata.labels}
        spec:
          replicas: ${parameters.replicas}
          selector:
            matchLabels: ${metadata.podSelectors}
          template:
            metadata:
              labels: ${metadata.podSelectors}
            spec:
              containers:
                - name: app
                  image: ${workload.containers["app"].image}
                  imagePullPolicy: ${parameters.imagePullPolicy}
                  ports:
                    - name: http
                      containerPort: ${parameters.port}
                      protocol: TCP
                  resources:
                    requests:
                      cpu: ${parameters.resources.requests.cpu}
                      memory: ${parameters.resources.requests.memory}
                    limits:
                      cpu: ${parameters.resources.limits.cpu}
                      memory: ${parameters.resources.limits.memory}

    - id: service
      template:
        apiVersion: v1
        kind: Service
        metadata:
          name: ${metadata.name}
          namespace: ${metadata.namespace}
          labels: ${metadata.labels}
        spec:
          type: ClusterIP
          selector: ${metadata.podSelectors}
          ports:
            - name: http
              port: 80
              targetPort: ${parameters.port}
              protocol: TCP

---
apiVersion: openchoreo.dev/v1alpha1
kind: Addon
metadata:
  name: persistent-volume
  namespace: default
spec:
  schema:
    parameters:
      volumeName: "string | required=true"
      mountPath: "string | required=true"
      containerName: "string | default=app"

    envOverrides:
      size: "string | default=10Gi"
      storageClass: "string | default=standard"

  creates:
    - template:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: ${metadata.name}-${addon.instanceName}
          namespace: ${metadata.namespace}
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: ${parameters.size}
          storageClassName: ${parameters.storageClass}

  patches:
    - target:
        group: apps
        version: v1
        kind: Deployment
      operations:
        - op: add
          path: /spec/template/spec/volumes/-
          value:
            name: ${parameters.volumeName}
            persistentVolumeClaim:
              claimName: ${metadata.name}-${addon.instanceName}

    - target:
        group: apps
        version: v1
        kind: Deployment
      operations:
        - op: add
          path: /spec/template/spec/containers/[?(@.name=='${parameters.containerName}')]/volumeMounts/-
          value:
            name: ${parameters.volumeName}
            mountPath: ${parameters.mountPath}

---
apiVersion: openchoreo.dev/v1alpha1
kind: Addon
metadata:
  name: emptydir-volume
spec:
  schema:
    # Define custom type for mount configuration
    types:
      MountConfig:
        containerName: string | required=true
        mountPath: string | required=true
        readOnly: boolean | default=false
        subPath: string | default=""

    parameters:
      volumeName: string | required=true
      mounts: "[]MountConfig | required=true minItems=3"

    envOverrides:
      sizeLimit: string | default=""
      medium: string | default="" # "" for disk, "Memory" for tmpfs

  # Patch the Deployment to add emptyDir volume
  patches:
    # Add emptyDir volume to pod spec
    - target:
        group: apps
        version: v1
        kind: Deployment
      operations:
        - op: add
          path: /spec/template/spec/volumes/-
          value:
            name: ${parameters.volumeName}
            emptyDir: |
              ${parameters.sizeLimit != "" || parameters.medium != "" ? {
                "sizeLimit": parameters.sizeLimit != "" ? parameters.sizeLimit : omit(),
                "medium": parameters.medium != "" ? parameters.medium : omit()
              } : {}}

    # Add volumeMounts to each specified container
    # This will be applied per mount in the mounts array
    - forEach: ${parameters.mounts}
      var: mount
      target:
        group: apps
        version: v1
        kind: Deployment
      operations:
        - op: add
          path: /spec/template/spec/containers/[?(@.name=='${mount.containerName}')]/volumeMounts/-
          value:
            name: ${parameters.volumeName}
            mountPath: ${mount.mountPath}
            readOnly: |
              ${has(mount.readOnly) ? mount.readOnly : false}
            subPath: |
              ${has(mount.subPath) ? mount.subPath : ""}

---
apiVersion: openchoreo.dev/v1alpha1
kind: Component
metadata:
  name: demo-app
  namespace: default
spec:
  owner:
    projectName: default

  componentType: deployment/web-service

  parameters:
    replicas: 2
    port: 8080
    resources:
      requests:
        cpu: "200m"
        memory: "512Mi"
      limits:
        cpu: "1000m"
        memory: "1Gi"

  addons:
    - name: persistent-volume
      instanceName: data-storage
      config:
        volumeName: app-data
        mountPath: /var/data
        containerName: app
        size: "20Gi"
        storageClass: "fast"
    - name: emptydir-volume
      instanceName: cache
      config:
        volumeName: cache-vol
        mounts:
          - containerName: app
            mountPath: /tmp/cache
            readOnly: false
    - name: emptydir-volume
      instanceName: workspace
      config:
        volumeName: workspace-vol
        mounts:
          - containerName: app
            mountPath: /tmp/work
            readOnly: false
        medium: ""
        sizeLimit: 1Gi

---
apiVersion: openchoreo.dev/v1alpha1
kind: Workload
metadata:
  name: demo-app-workload
  namespace: default
spec:
  owner:
    projectName: default
    componentName: demo-app

  containers:
    app:
      image: "nginx:1.25-alpine"

---
apiVersion: openchoreo.dev/v1alpha1
kind: ComponentDeployment
metadata:
  name: demo-app-development
  namespace: default
spec:
  owner:
    projectName: default
    componentName: demo-app

  environment: development

  overrides:
    resources:
      requests:
        cpu: "50m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"

  addonOverrides:
    data-storage:
      size: "5Gi"
      storageClass: "standard"
