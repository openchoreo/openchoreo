apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: openchoreo-controller-rules
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: openchoreo-controller-rules
    app.kubernetes.io/component: prometheus-rules
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "openchoreo-observability-plane.chart" . }}
spec:
  groups:
    - name: openchoreo.workloads
      interval: 30s 
      rules:
        # Application resource usage by organization/project/component
        - record: openchoreo:workload_cpu_usage_by_component
          expr: |
            sum by (openchoreo_organization, openchoreo_project, openchoreo_component, pod) (
              rate(container_cpu_usage_seconds_total{openchoreo_component!=""}[5m])
            )
        
        - record: openchoreo:workload_memory_usage_by_component
          expr: |
            sum by (openchoreo_organization, openchoreo_project, openchoreo_component, pod) (
              container_memory_working_set_bytes{openchoreo_component!=""}
            )
        
        # Network usage by component
        - record: openchoreo:workload_network_receive_rate_by_component
          expr: |
            sum by (openchoreo_organization, openchoreo_project, openchoreo_component, pod) (
              rate(container_network_receive_bytes_total{openchoreo_component!=""}[5m])
            )
        
        - record: openchoreo:workload_network_transmit_rate_by_component
          expr: |
            sum by (openchoreo_organization, openchoreo_project, openchoreo_component, pod) (
              rate(container_network_transmit_bytes_total{openchoreo_component!=""}[5m])
            )
        
        # Application HTTP metrics (if exposed)
        - record: openchoreo:workload_http_request_rate_by_component
          expr: |
            sum by (openchoreo_organization, openchoreo_project, openchoreo_component) (
              rate(http_requests_total{openchoreo_component!=""}[5m])
            )
        
        - record: openchoreo:workload_http_error_rate_by_component
          expr: |
            sum by (openchoreo_organization, openchoreo_project, openchoreo_component) (
              rate(http_requests_total{openchoreo_component!="", code=~"5.."}[5m])
            )
        
    - name: openchoreo.platform
      interval: 60s
      rules:
        # Release resource counts by environment
        - record: openchoreo:releases_by_environment
          expr: |
            count by (openchoreo_environment) (
              up{openchoreo_environment!=""}
            )
        
        # Component counts by organization
        - record: openchoreo:components_by_organization
          expr: |
            count by (openchoreo_organization) (
              up{openchoreo_organization!=""}
            )
        
        # Resource usage summary by organization
        - record: openchoreo:organization_cpu_usage
          expr: |
            sum by (openchoreo_organization) (
              openchoreo:workload_cpu_usage_by_component
            )
        
        - record: openchoreo:organization_memory_usage 
          expr: |
            sum by (openchoreo_organization) (
              openchoreo:workload_memory_usage_by_component
            )
