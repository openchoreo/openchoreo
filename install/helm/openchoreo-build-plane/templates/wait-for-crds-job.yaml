{{ if .Values.global.defaultResources.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: wait-for-argo-crds
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: wait-for-crds
      containers:
      - name: wait-for-crds
        image: bitnamilegacy/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Waiting for Argo Workflows CRDs to be ready..."
          
          # Wait for ClusterWorkflowTemplate CRD
          until kubectl get crd clusterworkflowtemplates.argoproj.io >/dev/null 2>&1; do
            echo "Waiting for ClusterWorkflowTemplate CRD..."
            sleep 5
          done
          
          # Wait for WorkflowTemplate CRD  
          until kubectl get crd workflowtemplates.argoproj.io >/dev/null 2>&1; do
            echo "Waiting for WorkflowTemplate CRD..."
            sleep 5
          done
          
          # Wait for Workflow CRD
          until kubectl get crd workflows.argoproj.io >/dev/null 2>&1; do
            echo "Waiting for Workflow CRD..."
            sleep 5
          done
          
          echo "All Argo Workflows CRDs are ready!"
  backoffLimit: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wait-for-crds
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wait-for-crds
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wait-for-crds
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wait-for-crds
subjects:
- kind: ServiceAccount
  name: wait-for-crds
  namespace: {{ .Release.Namespace }}
{{ end }}
