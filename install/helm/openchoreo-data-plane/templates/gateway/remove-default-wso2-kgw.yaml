apiVersion: v1
kind: ServiceAccount
metadata:
  name: gateway-removal-sa
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gateway-removal-role
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
rules:
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["gateways"]
    verbs: ["delete", "get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gateway-removal-rolebinding
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
subjects:
  - kind: ServiceAccount
    name: gateway-removal-sa
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: gateway-removal-role
  apiGroup: rbac.authorization.k8s.io
---

---
apiVersion: batch/v1
kind: Job
metadata:
  name: remove-wso2-kgw-default
  namespace: {{ $.Values.namespace | default $.Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: gateway-removal-sa
      containers:
      - name: remove-gateway
        image: {{ .Values.waitJob.image }}
        command:
        - /bin/sh
        - -c
        - |
          echo "Removing wso2-kgw-default gateway..."
          kubectl delete gateway wso2-kgw-default -n {{ $.Values.namespace | default $.Release.Namespace }} --ignore-not-found=true
          echo "Gateway removal completed."
      restartPolicy: Never
  backoffLimit: 3
